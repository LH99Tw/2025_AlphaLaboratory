| 계산 항목          | 관련 팩터 스타일                 | 설명                    |
| -------------- | ------------------------- | --------------------- |
| `MA20`, `MA60` | Momentum / Trend          | 이동평균 기반 팩터 (가격 대비 평균) |
| `Volatility`   | Risk-related factor       | 수익률 표준편차              |
| `Volume_MA20`  | Liquidity / Sentiment     | 거래량 기반 추세             |
| `RSI`          | Reversal / Momentum       | 과매수/과매도 지표            |
| `Market_Cap`   | Size (CAP factor)         | 시가총액 기반 스타일           |
| `Beta`         | Market Sensitivity Factor | 시장 민감도 (리스크 팩터)       |


close, open, high, low, volume, adv20, adv60, rank(), delta(), correlation(), covariance()
decay_linear(), signedpower, min, max ...

SEC
 https://www.sec.gov/files/company_tickers.json


IC (Information Coefficient)	팩터의 예측력 평가 지표. 팩터값과 미래 수익률 간의 상관계수 (보통 스피어만 순위상관).
→ 0.02~0.05만 돼도 유의미한 알파로 간주
Rank IC Mean / Std	팩터의 안정성과 일관성을 평가 (Sharpe Ratio처럼).
Hit Rate	팩터가 올바른 방향을 맞춘 비율. (예: 수익률이 양의 팩터 방향과 일치한 비율)
Turnover	팩터 포트폴리오의 변동성 및 거래 빈도. 너무 높은 turnover는 거래 비용 증가 위험
CAGR (연평균 수익률)	백테스트 전략이 시간에 따라 얼마나 성장했는가
MDD (최대 낙폭)	전략의 최대 하락 구간. 위험 회피 투자자에겐 중요
Sharpe Ratio	수익률 대비 변동성. 리스크 대비 수익 효율성
Alpha / Beta	팩터가 시장 대비 얼마나 초과 수익을 냈는지 (시장 중립적 포트 구성 시 사용)

✅ WorldQuant이나 퀀트펀드에서 가장 중시하는 것
1순위: IC & IC Stability
단일 팩터는 수익률보다 **예측력(상관)**이 중요.
→ IC > 0.03 이상이면 우수한 팩터로 간주.

2순위: Robustness
팩터가 시기, 산업, 스타일에 상관없이 일관되게 작동하는지
(ex. rolling window, 산업 중립, 시가총액 중립)

3순위: 실제 포트 수익성 (CAGR, Sharpe)
팩터를 이용해 만든 long-short 포트폴리오의 성과





[ 핵심 아이디어 ]
어떤 방식으로 만들것이냐.
101alpha를 기반으로 llm 파인튜닝을 통해서
합리적인 방식의 알파 팩터를 무한 생성
서로 유전 알고리즘을 통해서
효율적인 애들만 살리는 것

1. 알파 생성에 필요한 재료를 모으는 것
    - 기본적인 


연합학습(Federated Learning, FL) 개념을 차용한 CSTI 전략?

LLM을 이용해 수식형 알파를 만들고 싶을 때, 우리는 보통 이런 식의 수식을 원하죠:

if (rank(volume) > 0.8) and (return_5d > 0.03)


이 수식은 실제로 내부적으로는 트리(Tree) 구조로 표현됩니다.

         and
        /    \
   rank > 0.8  return_5d > 0.03


즉, 전략 수식은 “계층적 연산 조합”이고, 탐색 가능한 연산자/피연산자 조합의 수가 매우 많아서 전체 공간이 기하급수적으로 커지는 문제가 있습니다. 
이걸 **“탐색 공간 폭발 (combinatorial explosion)”**이라고 해요.

LLM 출력 수식 후보 수:
약 **20~30개의 초기 수식 트리 구조(노드)**를 생성합니다. 각 노드는 전략 수식의 “부분 구조”일 수 있고, 조합을 통해 전체 수식을 만듭니다.

MCTS 탐색 깊이/횟수:
논문에서는 100회 탐색(rollout) 기준으로 샤프 비율이 안정화됨을 언급하고, 대부분의 실험에서 100~200회 수준에서 최종 전략을 선택합니다.






🧠 AutoAlpha의 기술적 혁신

이 논문이 제안한 방식은 기존의 한계를 다음과 같이 극복했어:

1. 계층적 구조 (Hierarchical Structure) 도입
탐색을 1단계 알파(깊이 1) → 2단계(깊이 2) → 3단계... 순으로 확장하며 진화시킴.
즉, 성능 좋은 "루트 유전자(root gene)"를 기반으로 점점 깊은 알파 수식을 만드는 구조.

효과:
검색 효율성 극대화
높은 IC를 가지는 유전자 중심으로 탐색하여 실패 확률 감소


2. PCA 기반 Quality Diversity Search (PCA-QD)
많은 유사 알파가 만들어지는 걸 방지하기 위해 **다양성(diversity)**을 보장.
기존에는 알파 간 유사도 비교에 많은 계산량이 들었지만,
여기선 **주성분 분석(PCA)**을 사용하여 유사도를 근사치로 빠르게 계산함.
유사도가 높으면 fitness를 0으로 만들어 탈락시킴 → 다양한 해를 확보

3. Warm Start & 부모-자식 대체 (Replacement) 전략
Warm Start: 초기 유전자를 랜덤하게 뽑지 않고, IC 높은 것만 선별해 시작.
Replacement: 기존의 최악 개체와 교체하는 대신, 부모와 성능 비교 후 더 나은 자식만 교체.

효과:
조기 수렴 방지
유전자 다양성을 유지하면서도 성능 좋은 방향으로 진화 가능